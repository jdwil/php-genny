<?php
/**
 * Copyright (c) 2017 JD Williams
 *
 * This file is part of PHP-Genny, a library built by JD Williams. PHP-Genny is free software; you can
 * redistribute it and/or modify it under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 3 of the License, or (at your option) any later version.
 *
 * PHP-Genny is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
 * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
 * Public License for more details. You should have received a copy of the GNU Lesser General Public
 * License along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * You should have received a copy of the GNU General Public License along with Unify. If not, see
 * <http://www.gnu.org/licenses/>.
 */

declare(strict_types=1);

namespace JDWil\PhpGenny\Builder\Node;

use JDWil\PhpGenny\Builder\Node\Traits\InternalFunctionTrait;
use PhpParser\Node\Expr\MethodCall;
use PhpParser\Node\Expr\StaticCall;

/**
 * Trait InternalFunctionTrait
 *
 * @method static Func eval($code)
 * @method static Func zend_version()
 * @method static Func func_num_args()
 * @method static Func func_get_arg($arg_num)
 * @method static Func func_get_args()
 * @method static Func strlen($str)
 * @method static Func strcmp($str1, $str2)
 * @method static Func strncmp($str1, $str2, $len)
 * @method static Func strcasecmp($str1, $str2)
 * @method static Func strncasecmp($str1, $str2, $len)
 * @method static Func each($arr)
 * @method static Func error_reporting($new_error_level)
 * @method static Func define($constant_name, $value, $case_insensitive)
 * @method static Func defined($constant_name)
 * @method static Func get_class($object)
 * @method static Func get_called_class()
 * @method static Func get_parent_class($object)
 * @method static Func method_exists($object, $method)
 * @method static Func property_exists($object_or_class, $property_name)
 * @method static Func class_exists($classname, $autoload)
 * @method static Func interface_exists($classname, $autoload)
 * @method static Func trait_exists($traitname, $autoload)
 * @method static Func function_exists($function_name)
 * @method static Func class_alias($user_class_name, $alias_name, $autoload)
 * @method static Func get_included_files()
 * @method static Func get_required_files()
 * @method static Func is_subclass_of($object, $class_name, $allow_string)
 * @method static Func is_a($object, $class_name, $allow_string)
 * @method static Func get_class_vars($class_name)
 * @method static Func get_object_vars($obj)
 * @method static Func get_class_methods($class)
 * @method static Func trigger_error($message, $error_type)
 * @method static Func user_error($message, $error_type)
 * @method static Func set_error_handler($error_handler, $error_types)
 * @method static Func restore_error_handler()
 * @method static Func set_exception_handler($exception_handler)
 * @method static Func restore_exception_handler()
 * @method static Func get_declared_classes()
 * @method static Func get_declared_traits()
 * @method static Func get_declared_interfaces()
 * @method static Func get_defined_functions()
 * @method static Func get_defined_vars()
 * @method static Func create_function($args, $code)
 * @method static Func get_resource_type($res)
 * @method static Func get_resources($type)
 * @method static Func get_loaded_extensions($zend_extensions)
 * @method static Func extension_loaded($extension_name)
 * @method static Func get_extension_funcs($extension_name)
 * @method static Func get_defined_constants($categorize)
 * @method static Func debug_backtrace($options, $limit)
 * @method static Func debug_print_backtrace($options, $limit)
 * @method static Func gc_mem_caches()
 * @method static Func gc_collect_cycles()
 * @method static Func gc_enabled()
 * @method static Func gc_enable()
 * @method static Func gc_disable()
 * @method static Func strtotime($time, $now)
 * @method static Func date($format, $timestamp)
 * @method static Func idate($format, $timestamp)
 * @method static Func gmdate($format, $timestamp)
 * @method static Func mktime($hour, $min, $sec, $mon, $day, $year)
 * @method static Func gmmktime($hour, $min, $sec, $mon, $day, $year)
 * @method static Func checkdate($month, $day, $year)
 * @method static Func strftime($format, $timestamp)
 * @method static Func gmstrftime($format, $timestamp)
 * @method static Func time()
 * @method static Func localtime($timestamp, $associative_array)
 * @method static Func getdate($timestamp)
 * @method static Func date_create($time, $object)
 * @method static Func date_create_immutable($time, $object)
 * @method static Func date_create_from_format($format, $time, $object)
 * @method static Func date_create_immutable_from_format($format, $time, $object)
 * @method static Func date_parse($date)
 * @method static Func date_parse_from_format($format, $date)
 * @method static Func date_get_last_errors()
 * @method static Func date_format($object, $format)
 * @method static Func date_modify($object, $modify)
 * @method static Func date_add($object, $interval)
 * @method static Func date_sub($object, $interval)
 * @method static Func date_timezone_get($object)
 * @method static Func date_timezone_set($object, $timezone)
 * @method static Func date_offset_get($object)
 * @method static Func date_diff($object, $object2, $absolute)
 * @method static Func date_time_set($object, $hour, $minute, $second, $microseconds)
 * @method static Func date_date_set($object, $year, $month, $day)
 * @method static Func date_isodate_set($object, $year, $week, $day)
 * @method static Func date_timestamp_set($object, $unixtimestamp)
 * @method static Func date_timestamp_get($object)
 * @method static Func timezone_open($timezone)
 * @method static Func timezone_name_get($object)
 * @method static Func timezone_name_from_abbr($abbr, $gmtoffset, $isdst)
 * @method static Func timezone_offset_get($object, $datetime)
 * @method static Func timezone_transitions_get($object, $timestamp_begin, $timestamp_end)
 * @method static Func timezone_location_get($object)
 * @method static Func timezone_identifiers_list($what, $country)
 * @method static Func timezone_abbreviations_list()
 * @method static Func timezone_version_get()
 * @method static Func date_interval_create_from_date_string($time)
 * @method static Func date_interval_format($object, $format)
 * @method static Func date_default_timezone_set($timezone_identifier)
 * @method static Func date_default_timezone_get()
 * @method static Func date_sunrise($time, $format, $latitude, $longitude, $zenith, $gmt_offset)
 * @method static Func date_sunset($time, $format, $latitude, $longitude, $zenith, $gmt_offset)
 * @method static Func date_sun_info($time, $latitude, $longitude)
 * @method static Func libxml_set_streams_context($context)
 * @method static Func libxml_use_internal_errors($use_errors)
 * @method static Func libxml_get_last_error()
 * @method static Func libxml_clear_errors()
 * @method static Func libxml_get_errors()
 * @method static Func libxml_disable_entity_loader($disable)
 * @method static Func libxml_set_external_entity_loader($resolver_function)
 * @method static Func openssl_get_cert_locations()
 * @method static Func openssl_spki_new($privkey, $challenge, $algo)
 * @method static Func openssl_spki_verify($spki)
 * @method static Func openssl_spki_export($spki)
 * @method static Func openssl_spki_export_challenge($spki)
 * @method static Func openssl_pkey_free($key)
 * @method static Func openssl_pkey_new($configargs)
 * @method static Func openssl_pkey_export($key, $out, $passphrase, $config_args)
 * @method static Func openssl_pkey_export_to_file($key, $outfilename, $passphrase, $config_args)
 * @method static Func openssl_pkey_get_private($key, $passphrase)
 * @method static Func openssl_pkey_get_public($cert)
 * @method static Func openssl_pkey_get_details($key)
 * @method static Func openssl_free_key($key)
 * @method static Func openssl_get_privatekey($key, $passphrase)
 * @method static Func openssl_get_publickey($cert)
 * @method static Func openssl_x509_read($cert)
 * @method static Func openssl_x509_free($x509)
 * @method static Func openssl_x509_parse($x509, $shortname)
 * @method static Func openssl_x509_checkpurpose($x509cert, $purpose, $cainfo, $untrustedfile)
 * @method static Func openssl_x509_check_private_key($cert, $key)
 * @method static Func openssl_x509_export($x509, $out, $notext)
 * @method static Func openssl_x509_fingerprint($x509, $method, $raw_output)
 * @method static Func openssl_x509_export_to_file($x509, $outfilename, $notext)
 * @method static Func openssl_pkcs12_export($x509, $out, $priv_key, $pass, $args)
 * @method static Func openssl_pkcs12_export_to_file($x509, $filename, $priv_key, $pass, $args)
 * @method static Func openssl_pkcs12_read($PKCS12, $certs, $pass)
 * @method static Func openssl_csr_new($dn, $privkey, $configargs, $extraattribs)
 * @method static Func openssl_csr_export($csr, $out, $notext)
 * @method static Func openssl_csr_export_to_file($csr, $outfilename, $notext)
 * @method static Func openssl_csr_sign($csr, $x509, $priv_key, $days, $config_args, $serial)
 * @method static Func openssl_csr_get_subject($csr)
 * @method static Func openssl_csr_get_public_key($csr)
 * @method static Func openssl_digest($data, $method, $raw_output)
 * @method static Func openssl_encrypt($data, $method, $password, $options, $iv, $tag, $aad, $tag_length)
 * @method static Func openssl_decrypt($data, $method, $password, $options, $iv, $tag, $aad)
 * @method static Func openssl_cipher_iv_length($method)
 * @method static Func openssl_sign($data, $signature, $key, $method)
 * @method static Func openssl_verify($data, $signature, $key, $method)
 * @method static Func openssl_seal($data, $sealdata, $ekeys, $pubkeys, $method, $iv)
 * @method static Func openssl_open($data, $opendata, $ekey, $privkey, $iv)
 * @method static Func openssl_pbkdf2($password, $salt, $key_length, $iterations, $digest_algorithm)
 * @method static Func openssl_pkcs7_verify($filename, $flags, $signerscerts, $cainfo, $extracerts, $content)
 * @method static Func openssl_pkcs7_decrypt($infilename, $outfilename, $recipcert, $recipkey)
 * @method static Func openssl_pkcs7_sign($infile, $outfile, $signcert, $signkey, $headers, $flags, $extracertsfilename)
 * @method static Func openssl_pkcs7_encrypt($infile, $outfile, $recipcerts, $headers, $flags, $cipher)
 * @method static Func openssl_private_encrypt($data, $crypted, $key, $padding)
 * @method static Func openssl_private_decrypt($data, $crypted, $key, $padding)
 * @method static Func openssl_public_encrypt($data, $crypted, $key, $padding)
 * @method static Func openssl_public_decrypt($data, $crypted, $key, $padding)
 * @method static Func openssl_get_md_methods($aliases)
 * @method static Func openssl_get_cipher_methods($aliases)
 * @method static Func openssl_get_curve_names()
 * @method static Func openssl_dh_compute_key($pub_key, $dh_key)
 * @method static Func openssl_random_pseudo_bytes($length, $result_is_strong)
 * @method static Func openssl_error_string()
 * @method static Func preg_match($pattern, $subject, $subpatterns, $flags, $offset)
 * @method static Func preg_match_all($pattern, $subject, $subpatterns, $flags, $offset)
 * @method static Func preg_replace($regex, $replace, $subject, $limit, $count)
 * @method static Func preg_replace_callback($regex, $callback, $subject, $limit, $count)
 * @method static Func preg_replace_callback_array($pattern, $subject, $limit, $count)
 * @method static Func preg_filter($regex, $replace, $subject, $limit, $count)
 * @method static Func preg_split($pattern, $subject, $limit, $flags)
 * @method static Func preg_quote($str, $delim_char)
 * @method static Func preg_grep($regex, $input, $flags)
 * @method static Func preg_last_error()
 * @method static Func readgzfile($filename, $use_include_path)
 * @method static Func gzrewind($fp)
 * @method static Func gzclose($fp)
 * @method static Func gzeof($fp)
 * @method static Func gzgetc($fp)
 * @method static Func gzgets($fp, $length)
 * @method static Func gzgetss($fp, $length, $allowable_tags)
 * @method static Func gzread($fp, $length)
 * @method static Func gzopen($filename, $mode, $use_include_path)
 * @method static Func gzpassthru($fp)
 * @method static Func gzseek($fp, $offset, $whence)
 * @method static Func gztell($fp)
 * @method static Func gzwrite($fp, $str, $length)
 * @method static Func gzputs($fp, $str, $length)
 * @method static Func gzfile($filename, $use_include_path)
 * @method static Func gzcompress($data, $level, $encoding)
 * @method static Func gzuncompress($data, $max_decoded_len)
 * @method static Func gzdeflate($data, $level, $encoding)
 * @method static Func gzinflate($data, $max_decoded_len)
 * @method static Func gzencode($data, $level, $encoding)
 * @method static Func gzdecode($data, $max_decoded_len)
 * @method static Func zlib_encode($data, $encoding, $level)
 * @method static Func zlib_decode($data, $max_decoded_len)
 * @method static Func zlib_get_coding_type()
 * @method static Func deflate_init($encoding, $level)
 * @method static Func deflate_add($resource, $add, $flush_behavior)
 * @method static Func inflate_init($encoding)
 * @method static Func inflate_add($resource, $flush_behavior)
 * @method static Func ob_gzhandler($data, $flags)
 * @method static Func filter_input($type, $variable_name, $filter, $options)
 * @method static Func filter_var($variable, $filter, $options)
 * @method static Func filter_input_array($type, $definition, $add_empty)
 * @method static Func filter_var_array($data, $definition, $add_empty)
 * @method static Func filter_list()
 * @method static Func filter_has_var($type, $variable_name)
 * @method static Func filter_id($filtername)
 * @method static Func hash($algo, $data, $raw_output)
 * @method static Func hash_file($algo, $filename, $raw_output)
 * @method static Func hash_hmac($algo, $data, $key, $raw_output)
 * @method static Func hash_hmac_file($algo, $filename, $key, $raw_output)
 * @method static Func hash_init($algo, $options, $key)
 * @method static Func hash_update($context, $data)
 * @method static Func hash_update_stream($context, $handle, $length)
 * @method static Func hash_update_file($context, $filename, $context)
 * @method static Func hash_final($context, $raw_output)
 * @method static Func hash_copy($context)
 * @method static Func hash_algos()
 * @method static Func hash_pbkdf2($algo, $password, $salt, $iterations, $length, $raw_output)
 * @method static Func hash_equals($known_string, $user_string)
 * @method static Func hash_hkdf($ikm, $algo, $length, $string, $salt)
 * @method static Func mhash_keygen_s2k($hash, $input_password, $salt, $bytes)
 * @method static Func mhash_get_block_size($hash)
 * @method static Func mhash_get_hash_name($hash)
 * @method static Func mhash_count()
 * @method static Func mhash($hash, $data, $key)
 * @method static Func pcntl_fork()
 * @method static Func pcntl_waitpid($pid, $status, $options, $rusage)
 * @method static Func pcntl_wait($status, $options, $rusage)
 * @method static Func pcntl_signal($signo, $handler, $restart_syscalls)
 * @method static Func pcntl_signal_get_handler($signo)
 * @method static Func pcntl_signal_dispatch()
 * @method static Func pcntl_wifexited($status)
 * @method static Func pcntl_wifstopped($status)
 * @method static Func pcntl_wifsignaled($status)
 * @method static Func pcntl_wexitstatus($status)
 * @method static Func pcntl_wtermsig($status)
 * @method static Func pcntl_wstopsig($status)
 * @method static Func pcntl_exec($path, $args, $envs)
 * @method static Func pcntl_alarm($seconds)
 * @method static Func pcntl_get_last_error()
 * @method static Func pcntl_errno()
 * @method static Func pcntl_strerror($errno)
 * @method static Func pcntl_getpriority($pid, $process_identifier)
 * @method static Func pcntl_setpriority($priority, $pid, $process_identifier)
 * @method static Func pcntl_sigprocmask($how, $set, $oldset)
 * @method static Func pcntl_sigwaitinfo($set, $info)
 * @method static Func pcntl_sigtimedwait($set, $info, $seconds, $nanoseconds)
 * @method static Func pcntl_wifcontinued($status)
 * @method static Func pcntl_async_signals($on)
 * @method static Func session_name($name)
 * @method static Func session_module_name($module)
 * @method static Func session_save_path($path)
 * @method static Func session_id($id)
 * @method static Func session_create_id($prefix)
 * @method static Func session_regenerate_id($delete_old_session)
 * @method static Func session_decode($data)
 * @method static Func session_encode()
 * @method static Func session_start($options)
 * @method static Func session_destroy()
 * @method static Func session_unset()
 * @method static Func session_gc()
 * @method static Func session_set_save_handler($open, $close, $read, $write, $destroy, $gc, $create_sid, $validate_sid, $update_timestamp)
 * @method static Func session_cache_limiter($cache_limiter)
 * @method static Func session_cache_expire($new_cache_expire)
 * @method static Func session_set_cookie_params($lifetime, $path, $domain, $secure, $httponly)
 * @method static Func session_get_cookie_params()
 * @method static Func session_write_close()
 * @method static Func session_abort()
 * @method static Func session_reset()
 * @method static Func session_status()
 * @method static Func session_register_shutdown()
 * @method static Func session_commit()
 * @method static Func spl_classes()
 * @method static Func spl_autoload($class_name, $file_extensions)
 * @method static Func spl_autoload_extensions($file_extensions)
 * @method static Func spl_autoload_register($autoload_function, $throw, $prepend)
 * @method static Func spl_autoload_unregister($autoload_function)
 * @method static Func spl_autoload_functions()
 * @method static Func spl_autoload_call($class_name)
 * @method static Func class_parents($instance, $autoload)
 * @method static Func class_implements($what, $autoload)
 * @method static Func class_uses($what, $autoload)
 * @method static Func spl_object_hash($obj)
 * @method static Func iterator_to_array($iterator, $use_keys)
 * @method static Func iterator_count($iterator)
 * @method static Func iterator_apply($iterator, $function, $args)
 * @method static Func constant($const_name)
 * @method static Func bin2hex($data)
 * @method static Func hex2bin($data)
 * @method static Func sleep($seconds)
 * @method static Func usleep($micro_seconds)
 * @method static Func time_nanosleep($seconds, $nanoseconds)
 * @method static Func time_sleep_until($timestamp)
 * @method static Func strptime($timestamp, $format)
 * @method static Func flush()
 * @method static Func wordwrap($str, $width, $break, $cut)
 * @method static Func htmlspecialchars($string, $quote_style, $encoding, $double_encode)
 * @method static Func htmlentities($string, $quote_style, $encoding, $double_encode)
 * @method static Func html_entity_decode($string, $quote_style, $encoding)
 * @method static Func htmlspecialchars_decode($string, $quote_style)
 * @method static Func get_html_translation_table($table, $quote_style, $encoding)
 * @method static Func sha1($str, $raw_output)
 * @method static Func sha1_file($filename, $raw_output)
 * @method static Func md5($str, $raw_output)
 * @method static Func md5_file($filename, $raw_output)
 * @method static Func crc32($str)
 * @method static Func iptcparse($iptcdata)
 * @method static Func iptcembed($iptcdata, $jpeg_file_name, $spool)
 * @method static Func getimagesize($imagefile, $info)
 * @method static Func getimagesizefromstring($imagefile, $info)
 * @method static Func image_type_to_mime_type($imagetype)
 * @method static Func image_type_to_extension($imagetype, $include_dot)
 * @method static Func phpinfo($what)
 * @method static Func phpversion($extension)
 * @method static Func phpcredits($flag)
 * @method static Func php_sapi_name()
 * @method static Func php_uname($mode)
 * @method static Func php_ini_scanned_files()
 * @method static Func php_ini_loaded_file()
 * @method static Func strnatcmp($s1, $s2)
 * @method static Func strnatcasecmp($s1, $s2)
 * @method static Func substr_count($haystack, $needle, $offset, $length)
 * @method static Func strspn($str, $mask, $start, $len)
 * @method static Func strcspn($str, $mask, $start, $len)
 * @method static Func strtok($str, $token)
 * @method static Func strtoupper($str)
 * @method static Func strtolower($str)
 * @method static Func strpos($haystack, $needle, $offset)
 * @method static Func stripos($haystack, $needle, $offset)
 * @method static Func strrpos($haystack, $needle, $offset)
 * @method static Func strripos($haystack, $needle, $offset)
 * @method static Func strrev($str)
 * @method static Func hebrev($str, $max_chars_per_line)
 * @method static Func hebrevc($str, $max_chars_per_line)
 * @method static Func nl2br($str, $is_xhtml)
 * @method static Func basename($path, $suffix)
 * @method static Func dirname($path, $levels)
 * @method static Func pathinfo($path, $options)
 * @method static Func stripslashes($str)
 * @method static Func stripcslashes($str)
 * @method static Func strstr($haystack, $needle, $part)
 * @method static Func stristr($haystack, $needle, $part)
 * @method static Func strrchr($haystack, $needle)
 * @method static Func str_shuffle($str)
 * @method static Func str_word_count($str, $format, $charlist)
 * @method static Func str_split($str, $split_length)
 * @method static Func strpbrk($haystack, $char_list)
 * @method static Func substr_compare($main_str, $str, $offset, $length, $case_sensitivity)
 * @method static Func strcoll($str1, $str2)
 * @method static Func money_format($format, $value)
 * @method static Func substr($str, $start, $length)
 * @method static Func substr_replace($str, $replace, $start, $length)
 * @method static Func quotemeta($str)
 * @method static Func ucfirst($str)
 * @method static Func lcfirst($str)
 * @method static Func ucwords($str, $delimiters)
 * @method static Func strtr($str, $from, $to)
 * @method static Func addslashes($str)
 * @method static Func addcslashes($str, $charlist)
 * @method static Func rtrim($str, $character_mask)
 * @method static Func str_replace($search, $replace, $subject, $replace_count)
 * @method static Func str_ireplace($search, $replace, $subject, $replace_count)
 * @method static Func str_repeat($input, $mult)
 * @method static Func count_chars($input, $mode)
 * @method static Func chunk_split($str, $chunklen, $ending)
 * @method static Func trim($str, $character_mask)
 * @method static Func ltrim($str, $character_mask)
 * @method static Func strip_tags($str, $allowable_tags)
 * @method static Func similar_text($str1, $str2, $percent)
 * @method static Func explode($separator, $str, $limit)
 * @method static Func implode($glue, $pieces)
 * @method static Func join($glue, $pieces)
 * @method static Func setlocale($category, $locales)
 * @method static Func localeconv()
 * @method static Func nl_langinfo($item)
 * @method static Func soundex($str)
 * @method static Func levenshtein($str1, $str2, $cost_ins, $cost_rep, $cost_del)
 * @method static Func chr($codepoint)
 * @method static Func ord($character)
 * @method static Func parse_str($encoded_string, $result)
 * @method static Func str_getcsv($string, $delimiter, $enclosure, $escape)
 * @method static Func str_pad($input, $pad_length, $pad_string, $pad_type)
 * @method static Func chop($str, $character_mask)
 * @method static Func strchr($haystack, $needle, $part)
 * @method static Func sprintf($format, $args)
 * @method static Func printf($format, $args)
 * @method static Func vprintf($format, $args)
 * @method static Func vsprintf($format, $args)
 * @method static Func fprintf($stream, $format, $args)
 * @method static Func vfprintf($stream, $format, $args)
 * @method static Func sscanf($str, $format, $vars)
 * @method static Func fscanf($stream, $format, $vars)
 * @method static Func parse_url($url, $component)
 * @method static Func urlencode($str)
 * @method static Func urldecode($str)
 * @method static Func rawurlencode($str)
 * @method static Func rawurldecode($str)
 * @method static Func http_build_query($formdata, $prefix, $arg_separator, $enc_type)
 * @method static Func readlink($filename)
 * @method static Func linkinfo($filename)
 * @method static Func symlink($target, $link)
 * @method static Func link($target, $link)
 * @method static Func unlink($filename, $context)
 * @method static Func exec($command, $output, $return_value)
 * @method static Func system($command, $return_value)
 * @method static Func escapeshellcmd($command)
 * @method static Func escapeshellarg($arg)
 * @method static Func passthru($command, $return_value)
 * @method static Func shell_exec($cmd)
 * @method static Func proc_open($command, $descriptorspec, $pipes, $cwd, $env, $other_options)
 * @method static Func proc_close($process)
 * @method static Func proc_terminate($process, $signal)
 * @method static Func proc_get_status($process)
 * @method static Func proc_nice($priority)
 * @method static Func rand($min, $max)
 * @method static Func srand($seed, $mode)
 * @method static Func getrandmax()
 * @method static Func mt_rand($min, $max)
 * @method static Func mt_srand($seed, $mode)
 * @method static Func mt_getrandmax()
 * @method static Func random_bytes($length)
 * @method static Func random_int($min, $max)
 * @method static Func getservbyname($service, $protocol)
 * @method static Func getservbyport($port, $protocol)
 * @method static Func getprotobyname($name)
 * @method static Func getprotobynumber($proto)
 * @method static Func getmyuid()
 * @method static Func getmygid()
 * @method static Func getmypid()
 * @method static Func getmyinode()
 * @method static Func getlastmod()
 * @method static Func base64_decode($str, $strict)
 * @method static Func base64_encode($str)
 * @method static Func password_hash($password, $algo, $options)
 * @method static Func password_get_info($hash)
 * @method static Func password_needs_rehash($hash, $algo, $options)
 * @method static Func password_verify($password, $hash)
 * @method static Func convert_uuencode($data)
 * @method static Func convert_uudecode($data)
 * @method static Func abs($number)
 * @method static Func ceil($number)
 * @method static Func floor($number)
 * @method static Func round($number, $precision, $mode)
 * @method static Func sin($number)
 * @method static Func cos($number)
 * @method static Func tan($number)
 * @method static Func asin($number)
 * @method static Func acos($number)
 * @method static Func atan($number)
 * @method static Func atanh($number)
 * @method static Func atan2($y, $x)
 * @method static Func sinh($number)
 * @method static Func cosh($number)
 * @method static Func tanh($number)
 * @method static Func asinh($number)
 * @method static Func acosh($number)
 * @method static Func expm1($number)
 * @method static Func log1p($number)
 * @method static Func pi()
 * @method static Func is_finite($val)
 * @method static Func is_nan($val)
 * @method static Func is_infinite($val)
 * @method static Func pow($base, $exponent)
 * @method static Func exp($number)
 * @method static Func log($number, $base)
 * @method static Func log10($number)
 * @method static Func sqrt($number)
 * @method static Func hypot($num1, $num2)
 * @method static Func deg2rad($number)
 * @method static Func rad2deg($number)
 * @method static Func bindec($binary_number)
 * @method static Func hexdec($hexadecimal_number)
 * @method static Func octdec($octal_number)
 * @method static Func decbin($decimal_number)
 * @method static Func decoct($decimal_number)
 * @method static Func dechex($decimal_number)
 * @method static Func base_convert($number, $frombase, $tobase)
 * @method static Func number_format($number, $num_decimal_places, $dec_separator, $thousands_separator)
 * @method static Func fmod($x, $y)
 * @method static Func intdiv($dividend, $divisor)
 * @method static Func inet_ntop($in_addr)
 * @method static Func inet_pton($ip_address)
 * @method static Func ip2long($ip_address)
 * @method static Func long2ip($proper_address)
 * @method static Func getenv($varname, $local_only)
 * @method static Func putenv($setting)
 * @method static Func getopt($options, $opts, $optind)
 * @method static Func sys_getloadavg()
 * @method static Func microtime($get_as_float)
 * @method static Func gettimeofday($get_as_float)
 * @method static Func getrusage($who)
 * @method static Func uniqid($prefix, $more_entropy)
 * @method static Func quoted_printable_decode($str)
 * @method static Func quoted_printable_encode($str)
 * @method static Func convert_cyr_string($str, $from, $to)
 * @method static Func get_current_user()
 * @method static Func set_time_limit($seconds)
 * @method static Func header_register_callback($callback)
 * @method static Func get_cfg_var($option_name)
 * @method static Func get_magic_quotes_gpc()
 * @method static Func get_magic_quotes_runtime()
 * @method static Func error_log($message, $message_type, $destination, $extra_headers)
 * @method static Func error_get_last()
 * @method static Func error_clear_last()
 * @method static Func call_user_func($function_name, $parameters)
 * @method static Func call_user_func_array($function_name, $parameters)
 * @method static Func forward_static_call($function_name, $parameters)
 * @method static Func forward_static_call_array($function_name, $parameters)
 * @method static Func serialize($var)
 * @method static Func unserialize($variable_representation, $allowed_classes)
 * @method static Func var_dump($vars)
 * @method static Func var_export($var, $return)
 * @method static Func debug_zval_dump($vars)
 * @method static Func print_r($var, $return)
 * @method static Func memory_get_usage($real_usage)
 * @method static Func memory_get_peak_usage($real_usage)
 * @method static Func register_shutdown_function($function_name, $parameters)
 * @method static Func register_tick_function($function_name, $parameters)
 * @method static Func unregister_tick_function($function_name)
 * @method static Func highlight_file($file_name, $return)
 * @method static Func show_source($file_name, $return)
 * @method static Func highlight_string($string, $return)
 * @method static Func php_strip_whitespace($file_name)
 * @method static Func ini_get($varname)
 * @method static Func ini_get_all($extension, $details)
 * @method static Func ini_set($varname, $newvalue)
 * @method static Func ini_alter($varname, $newvalue)
 * @method static Func ini_restore($varname)
 * @method static Func get_include_path()
 * @method static Func set_include_path($new_include_path)
 * @method static Func restore_include_path()
 * @method static Func setcookie($name, $value, $expires, $path, $domain, $secure, $httponly)
 * @method static Func setrawcookie($name, $value, $expires, $path, $domain, $secure, $httponly)
 * @method static Func header($header, $replace, $http_response_code)
 * @method static Func header_remove($name)
 * @method static Func headers_sent($file, $line)
 * @method static Func headers_list()
 * @method static Func http_response_code($response_code)
 * @method static Func connection_aborted()
 * @method static Func connection_status()
 * @method static Func ignore_user_abort($value)
 * @method static Func parse_ini_file($filename, $process_sections, $scanner_mode)
 * @method static Func parse_ini_string($ini_string, $process_sections, $scanner_mode)
 * @method static Func is_uploaded_file($path)
 * @method static Func move_uploaded_file($path, $new_path)
 * @method static Func gethostbyaddr($ip_address)
 * @method static Func gethostbyname($hostname)
 * @method static Func gethostbynamel($hostname)
 * @method static Func gethostname()
 * @method static Func dns_check_record($host, $type)
 * @method static Func checkdnsrr($host, $type)
 * @method static Func dns_get_mx($hostname, $mxhosts, $weight)
 * @method static Func getmxrr($hostname, $mxhosts, $weight)
 * @method static Func dns_get_record($hostname, $type, $authns, $addtl, $raw)
 * @method static Func intval($var, $base)
 * @method static Func floatval($var)
 * @method static Func doubleval($var)
 * @method static Func strval($var)
 * @method static Func boolval($var)
 * @method static Func gettype($var)
 * @method static Func settype($var, $type)
 * @method static Func is_null($var)
 * @method static Func is_resource($var)
 * @method static Func is_bool($var)
 * @method static Func is_int($var)
 * @method static Func is_float($var)
 * @method static Func is_integer($var)
 * @method static Func is_long($var)
 * @method static Func is_double($var)
 * @method static Func is_real($var)
 * @method static Func is_numeric($value)
 * @method static Func is_string($var)
 * @method static Func is_array($var)
 * @method static Func is_object($var)
 * @method static Func is_scalar($value)
 * @method static Func is_callable($var, $syntax_only, $callable_name)
 * @method static Func is_iterable($var)
 * @method static Func pclose($fp)
 * @method static Func popen($command, $mode)
 * @method static Func readfile($filename, $flags, $context)
 * @method static Func rewind($fp)
 * @method static Func rmdir($dirname, $context)
 * @method static Func umask($mask)
 * @method static Func fclose($fp)
 * @method static Func feof($fp)
 * @method static Func fgetc($fp)
 * @method static Func fgets($fp, $length)
 * @method static Func fgetss($fp, $length, $allowable_tags)
 * @method static Func fread($fp, $length)
 * @method static Func fopen($filename, $mode, $use_include_path, $context)
 * @method static Func fpassthru($fp)
 * @method static Func ftruncate($fp, $size)
 * @method static Func fstat($fp)
 * @method static Func fseek($fp, $offset, $whence)
 * @method static Func ftell($fp)
 * @method static Func fflush($fp)
 * @method static Func fwrite($fp, $str, $length)
 * @method static Func fputs($fp, $str, $length)
 * @method static Func mkdir($pathname, $mode, $recursive, $context)
 * @method static Func rename($old_name, $new_name, $context)
 * @method static Func copy($source_file, $destination_file, $context)
 * @method static Func tempnam($dir, $prefix)
 * @method static Func tmpfile()
 * @method static Func file($filename, $flags, $context)
 * @method static Func file_get_contents($filename, $flags, $context, $offset, $maxlen)
 * @method static Func file_put_contents($filename, $data, $flags, $context)
 * @method static Func stream_select($read_streams, $write_streams, $except_streams, $tv_sec, $tv_usec)
 * @method static Func stream_context_create($options, $params)
 * @method static Func stream_context_set_params($stream_or_context, $options)
 * @method static Func stream_context_get_params($stream_or_context)
 * @method static Func stream_context_set_option($stream_or_context, $wrappername, $optionname, $value)
 * @method static Func stream_context_get_options($stream_or_context)
 * @method static Func stream_context_get_default($options)
 * @method static Func stream_context_set_default($options)
 * @method static Func stream_filter_prepend($stream, $filtername, $read_write, $filterparams)
 * @method static Func stream_filter_append($stream, $filtername, $read_write, $filterparams)
 * @method static Func stream_filter_remove($stream_filter)
 * @method static Func stream_socket_client($remoteaddress, $errcode, $errstring, $timeout, $flags, $context)
 * @method static Func stream_socket_server($localaddress, $errcode, $errstring, $flags, $context)
 * @method static Func stream_socket_accept($serverstream, $timeout, $peername)
 * @method static Func stream_socket_get_name($stream, $want_peer)
 * @method static Func stream_socket_recvfrom($stream, $amount, $flags, $remote_addr)
 * @method static Func stream_socket_sendto($stream, $data, $flags, $target_addr)
 * @method static Func stream_socket_enable_crypto($stream, $enable, $cryptokind, $sessionstream)
 * @method static Func stream_socket_shutdown($stream, $how)
 * @method static Func stream_socket_pair($domain, $type, $protocol)
 * @method static Func stream_copy_to_stream($source, $dest, $maxlen, $pos)
 * @method static Func stream_get_contents($source, $maxlen, $offset)
 * @method static Func stream_supports_lock($stream)
 * @method static Func fgetcsv($fp, $length, $delimiter, $enclosure, $escape)
 * @method static Func fputcsv($fp, $fields, $delimiter, $enclosure, $escape_char)
 * @method static Func flock($fp, $operation, $wouldblock)
 * @method static Func get_meta_tags($filename, $use_include_path)
 * @method static Func stream_set_read_buffer($fp, $buffer)
 * @method static Func stream_set_write_buffer($fp, $buffer)
 * @method static Func set_file_buffer($fp, $buffer)
 * @method static Func stream_set_chunk_size($fp, $chunk_size)
 * @method static Func stream_set_blocking($socket, $mode)
 * @method static Func socket_set_blocking($socket, $mode)
 * @method static Func stream_get_meta_data($fp)
 * @method static Func stream_get_line($stream, $maxlen, $ending)
 * @method static Func stream_wrapper_register($protocol, $classname, $flags)
 * @method static Func stream_register_wrapper($protocol, $classname, $flags)
 * @method static Func stream_wrapper_unregister($protocol)
 * @method static Func stream_wrapper_restore($protocol)
 * @method static Func stream_get_wrappers()
 * @method static Func stream_get_transports()
 * @method static Func stream_resolve_include_path($filename)
 * @method static Func stream_is_local($stream)
 * @method static Func get_headers($url, $format, $context)
 * @method static Func stream_set_timeout($stream, $seconds, $microseconds)
 * @method static Func socket_set_timeout($stream, $seconds, $microseconds)
 * @method static Func socket_get_status($fp)
 * @method static Func realpath($path)
 * @method static Func fnmatch($pattern, $filename, $flags)
 * @method static Func fsockopen($hostname, $port, $errno, $errstr, $timeout)
 * @method static Func pfsockopen($hostname, $port, $errno, $errstr, $timeout)
 * @method static Func pack($format, $args)
 * @method static Func unpack($format, $input, $offset)
 * @method static Func get_browser($browser_name, $return_array)
 * @method static Func crypt($str, $salt)
 * @method static Func opendir($path, $context)
 * @method static Func closedir($dir_handle)
 * @method static Func chdir($directory)
 * @method static Func chroot($directory)
 * @method static Func getcwd()
 * @method static Func rewinddir($dir_handle)
 * @method static Func readdir($dir_handle)
 * @method static Func dir($directory, $context)
 * @method static Func scandir($dir, $sorting_order, $context)
 * @method static Func glob($pattern, $flags)
 * @method static Func fileatime($filename)
 * @method static Func filectime($filename)
 * @method static Func filegroup($filename)
 * @method static Func fileinode($filename)
 * @method static Func filemtime($filename)
 * @method static Func fileowner($filename)
 * @method static Func fileperms($filename)
 * @method static Func filesize($filename)
 * @method static Func filetype($filename)
 * @method static Func file_exists($filename)
 * @method static Func is_writable($filename)
 * @method static Func is_writeable($filename)
 * @method static Func is_readable($filename)
 * @method static Func is_executable($filename)
 * @method static Func is_file($filename)
 * @method static Func is_dir($filename)
 * @method static Func is_link($filename)
 * @method static Func stat($filename)
 * @method static Func lstat($filename)
 * @method static Func chown($filename, $user)
 * @method static Func chgrp($filename, $group)
 * @method static Func lchown($filename, $user)
 * @method static Func lchgrp($filename, $group)
 * @method static Func chmod($filename, $mode)
 * @method static Func touch($filename, $time, $atime)
 * @method static Func clearstatcache($clear_realpath_cache, $filename)
 * @method static Func disk_total_space($path)
 * @method static Func disk_free_space($path)
 * @method static Func diskfreespace($path)
 * @method static Func realpath_cache_size()
 * @method static Func realpath_cache_get()
 * @method static Func mail($to, $subject, $message, $additional_headers, $additional_parameters)
 * @method static Func ezmlm_hash($addr)
 * @method static Func openlog($ident, $option, $facility)
 * @method static Func syslog($priority, $message)
 * @method static Func closelog()
 * @method static Func lcg_value()
 * @method static Func metaphone($text, $phones)
 * @method static Func ob_start($user_function, $chunk_size, $flags)
 * @method static Func ob_flush()
 * @method static Func ob_clean()
 * @method static Func ob_end_flush()
 * @method static Func ob_end_clean()
 * @method static Func ob_get_flush()
 * @method static Func ob_get_clean()
 * @method static Func ob_get_length()
 * @method static Func ob_get_level()
 * @method static Func ob_get_status($full_status)
 * @method static Func ob_get_contents()
 * @method static Func ob_implicit_flush($flag)
 * @method static Func ob_list_handlers()
 * @method static Func ksort($arg, $sort_flags)
 * @method static Func krsort($arg, $sort_flags)
 * @method static Func natsort($arg)
 * @method static Func natcasesort($arg)
 * @method static Func asort($arg, $sort_flags)
 * @method static Func arsort($arg, $sort_flags)
 * @method static Func sort($arg, $sort_flags)
 * @method static Func rsort($arg, $sort_flags)
 * @method static Func usort($arg, $cmp_function)
 * @method static Func uasort($arg, $cmp_function)
 * @method static Func uksort($arg, $cmp_function)
 * @method static Func shuffle($arg)
 * @method static Func array_walk($input, $funcname, $userdata)
 * @method static Func array_walk_recursive($input, $funcname, $userdata)
 * @method static Func count($var, $mode)
 * @method static Func end($arg)
 * @method static Func prev($arg)
 * @method static Func next($arg)
 * @method static Func reset($arg)
 * @method static Func current($arg)
 * @method static Func key($arg)
 * @method static Func min($args)
 * @method static Func max($args)
 * @method static Func in_array($needle, $haystack, $strict)
 * @method static Func array_search($needle, $haystack, $strict)
 * @method static Func extract($arg, $extract_type, $prefix)
 * @method static Func compact($var_names)
 * @method static Func array_fill($start_key, $num, $val)
 * @method static Func array_fill_keys($keys, $val)
 * @method static Func range($low, $high, $step)
 * @method static Func array_multisort($arr1, $sort_order, $sort_flags, $arr2)
 * @method static Func array_push($stack, $vars)
 * @method static Func array_pop($stack)
 * @method static Func array_shift($stack)
 * @method static Func array_unshift($stack, $vars)
 * @method static Func array_splice($arg, $offset, $length, $replacement)
 * @method static Func array_slice($arg, $offset, $length, $preserve_keys)
 * @method static Func array_merge($arr1, $arrays)
 * @method static Func array_merge_recursive($arr1, $arrays)
 * @method static Func array_replace($arr1, $arrays)
 * @method static Func array_replace_recursive($arr1, $arrays)
 * @method static Func array_keys($arg, $search_value, $strict)
 * @method static Func array_values($arg)
 * @method static Func array_count_values($arg)
 * @method static Func array_column($arg, $column_key, $index_key)
 * @method static Func array_reverse($input, $preserve_keys)
 * @method static Func array_reduce($arg, $callback, $initial)
 * @method static Func array_pad($arg, $pad_size, $pad_value)
 * @method static Func array_flip($arg)
 * @method static Func array_change_key_case($input, $case)
 * @method static Func array_rand($arg, $num_req)
 * @method static Func array_unique($arg, $flags)
 * @method static Func array_intersect($arr1, $arrays)
 * @method static Func array_intersect_key($arr1, $arrays)
 * @method static Func array_intersect_ukey($arr1, $arr2, $callback_key_compare_func)
 * @method static Func array_uintersect($arr1, $arr2, $callback_data_compare_func)
 * @method static Func array_intersect_assoc($arr1, $arrays)
 * @method static Func array_uintersect_assoc($arr1, $arr2, $callback_data_compare_func)
 * @method static Func array_intersect_uassoc($arr1, $arr2, $callback_key_compare_func)
 * @method static Func array_uintersect_uassoc($arr1, $arr2, $callback_data_compare_func, $callback_key_compare_func)
 * @method static Func array_diff($arr1, $arrays)
 * @method static Func array_diff_key($arr1, $arrays)
 * @method static Func array_diff_ukey($arr1, $arr2, $callback_key_comp_func)
 * @method static Func array_udiff($arr1, $arr2, $callback_data_comp_func)
 * @method static Func array_diff_assoc($arr1, $arrays)
 * @method static Func array_udiff_assoc($arr1, $arr2, $callback_key_comp_func)
 * @method static Func array_diff_uassoc($arr1, $arr2, $callback_data_comp_func)
 * @method static Func array_udiff_uassoc($arr1, $arr2, $callback_data_comp_func, $callback_key_comp_func)
 * @method static Func array_sum($arg)
 * @method static Func array_product($arg)
 * @method static Func array_filter($arg, $callback, $use_keys)
 * @method static Func array_map($callback, $arrays)
 * @method static Func array_chunk($arg, $size, $preserve_keys)
 * @method static Func array_combine($keys, $values)
 * @method static Func array_key_exists($key, $search)
 * @method static Func pos($arg)
 * @method static Func sizeof($var, $mode)
 * @method static Func key_exists($key, $search)
 * @method static Func assert($assertion, $description)
 * @method static Func assert_options($what, $value)
 * @method static Func version_compare($ver1, $ver2, $oper)
 * @method static Func ftok($pathname, $proj)
 * @method static Func str_rot13($str)
 * @method static Func stream_get_filters()
 * @method static Func stream_filter_register($filtername, $classname)
 * @method static Func stream_bucket_make_writeable($brigade)
 * @method static Func stream_bucket_prepend($brigade, $bucket)
 * @method static Func stream_bucket_append($brigade, $bucket)
 * @method static Func stream_bucket_new($stream, $buffer)
 * @method static Func output_add_rewrite_var($name, $value)
 * @method static Func output_reset_rewrite_vars()
 * @method static Func sys_get_temp_dir()
 * @method static Func xhprof_enable($flags, $options)
 * @method static Func xhprof_disable()
 * @method static Func xhprof_sample_enable()
 * @method static Func xhprof_sample_disable()
 * @method static Func pdo_drivers()
 * @method static Func xml_parser_create($encoding)
 * @method static Func xml_parser_create_ns($encoding, $sep)
 * @method static Func xml_set_object($parser, $obj)
 * @method static Func xml_set_element_handler($parser, $shdl, $ehdl)
 * @method static Func xml_set_character_data_handler($parser, $hdl)
 * @method static Func xml_set_processing_instruction_handler($parser, $hdl)
 * @method static Func xml_set_default_handler($parser, $hdl)
 * @method static Func xml_set_unparsed_entity_decl_handler($parser, $hdl)
 * @method static Func xml_set_notation_decl_handler($parser, $hdl)
 * @method static Func xml_set_external_entity_ref_handler($parser, $hdl)
 * @method static Func xml_set_start_namespace_decl_handler($parser, $hdl)
 * @method static Func xml_set_end_namespace_decl_handler($parser, $hdl)
 * @method static Func xml_parse($parser, $data, $isfinal)
 * @method static Func xml_parse_into_struct($parser, $data, $values, $index)
 * @method static Func xml_get_error_code($parser)
 * @method static Func xml_error_string($code)
 * @method static Func xml_get_current_line_number($parser)
 * @method static Func xml_get_current_column_number($parser)
 * @method static Func xml_get_current_byte_index($parser)
 * @method static Func xml_parser_free($parser)
 * @method static Func xml_parser_set_option($parser, $option, $value)
 * @method static Func xml_parser_get_option($parser, $option)
 * @method static Func utf8_encode($data)
 * @method static Func utf8_decode($data)
 * @method static Func apcu_cache_info($limited)
 * @method static Func apcu_clear_cache()
 * @method static Func apcu_sma_info($limited)
 * @method static Func apcu_key_info($key)
 * @method static Func apcu_enabled()
 * @method static Func apcu_store($key, $var, $ttl)
 * @method static Func apcu_fetch($key, $success)
 * @method static Func apcu_delete($keys)
 * @method static Func apcu_add($key, $var, $ttl)
 * @method static Func apcu_inc($key, $step, $success)
 * @method static Func apcu_dec($key, $step, $success)
 * @method static Func apcu_cas($key, $old, $new)
 * @method static Func apcu_exists($keys)
 * @method static Func apcu_entry($key, $generator, $ttl)
 * @method static Func apc_cache_info($type, $limited)
 * @method static Func apc_clear_cache($type)
 * @method static Func apc_store($key, $var, $ttl)
 * @method static Func apc_fetch($key, $success)
 * @method static Func apc_enabled()
 * @method static Func apc_delete($keys)
 * @method static Func apc_add($key, $var, $ttl)
 * @method static Func apc_sma_info($limited)
 * @method static Func apc_inc($key, $step, $success)
 * @method static Func apc_dec($key, $step, $success)
 * @method static Func apc_cas($key, $old, $new)
 * @method static Func apc_exists($keys)
 * @method static Func jdtogregorian($juliandaycount)
 * @method static Func gregoriantojd($month, $day, $year)
 * @method static Func jdtojulian($juliandaycount)
 * @method static Func juliantojd($month, $day, $year)
 * @method static Func jdtojewish($juliandaycount, $hebrew, $fl)
 * @method static Func jewishtojd($month, $day, $year)
 * @method static Func jdtofrench($juliandaycount)
 * @method static Func frenchtojd($month, $day, $year)
 * @method static Func jddayofweek($juliandaycount, $mode)
 * @method static Func jdmonthname($juliandaycount, $mode)
 * @method static Func easter_date($year)
 * @method static Func easter_days($year, $method)
 * @method static Func unixtojd($timestamp)
 * @method static Func jdtounix($jday)
 * @method static Func cal_to_jd($calendar, $month, $day, $year)
 * @method static Func cal_from_jd($jd, $calendar)
 * @method static Func cal_days_in_month($calendar, $month, $year)
 * @method static Func cal_info($calendar)
 * @method static Func ctype_alnum($text)
 * @method static Func ctype_alpha($text)
 * @method static Func ctype_cntrl($text)
 * @method static Func ctype_digit($text)
 * @method static Func ctype_lower($text)
 * @method static Func ctype_graph($text)
 * @method static Func ctype_print($text)
 * @method static Func ctype_punct($text)
 * @method static Func ctype_space($text)
 * @method static Func ctype_upper($text)
 * @method static Func ctype_xdigit($text)
 * @method static Func curl_init($url)
 * @method static Func curl_copy_handle($ch)
 * @method static Func curl_version($version)
 * @method static Func curl_setopt($ch, $option, $value)
 * @method static Func curl_setopt_array($ch, $options)
 * @method static Func curl_exec($ch)
 * @method static Func curl_getinfo($ch, $option)
 * @method static Func curl_error($ch)
 * @method static Func curl_errno($ch)
 * @method static Func curl_close($ch)
 * @method static Func curl_strerror($errornum)
 * @method static Func curl_multi_strerror($errornum)
 * @method static Func curl_share_strerror($errornum)
 * @method static Func curl_reset($ch)
 * @method static Func curl_escape($ch, $str)
 * @method static Func curl_unescape($ch, $str)
 * @method static Func curl_pause($ch, $bitmask)
 * @method static Func curl_multi_init()
 * @method static Func curl_multi_add_handle($mh, $ch)
 * @method static Func curl_multi_remove_handle($mh, $ch)
 * @method static Func curl_multi_select($mh, $timeout)
 * @method static Func curl_multi_exec($mh, $still_running)
 * @method static Func curl_multi_getcontent($ch)
 * @method static Func curl_multi_info_read($mh, $msgs_in_queue)
 * @method static Func curl_multi_close($mh)
 * @method static Func curl_multi_errno($mh)
 * @method static Func curl_multi_setopt($sh, $option, $value)
 * @method static Func curl_share_init()
 * @method static Func curl_share_close($sh)
 * @method static Func curl_share_setopt($sh, $option, $value)
 * @method static Func curl_share_errno($sh)
 * @method static Func curl_file_create($filename, $mimetype, $postname)
 * @method static Func dom_import_simplexml($node)
 * @method static Func exif_read_data($filename, $sections_needed, $sub_arrays, $read_thumbnail)
 * @method static Func read_exif_data($filename, $sections_needed, $sub_arrays, $read_thumbnail)
 * @method static Func exif_tagname($index)
 * @method static Func exif_thumbnail($filename, $width, $height, $imagetype)
 * @method static Func exif_imagetype($imagefile)
 * @method static Func finfo_open($options, $arg)
 * @method static Func finfo_close($finfo)
 * @method static Func finfo_set_flags($finfo, $options)
 * @method static Func finfo_file($finfo, $filename, $options, $context)
 * @method static Func finfo_buffer($finfo, $string, $options, $context)
 * @method static Func mime_content_type($string)
 * @method static Func ftp_connect($host, $port, $timeout)
 * @method static Func ftp_ssl_connect($host, $port, $timeout)
 * @method static Func ftp_login($ftp, $username, $password)
 * @method static Func ftp_pwd($ftp)
 * @method static Func ftp_cdup($ftp)
 * @method static Func ftp_chdir($ftp, $directory)
 * @method static Func ftp_exec($ftp, $command)
 * @method static Func ftp_raw($ftp, $command)
 * @method static Func ftp_mkdir($ftp, $directory)
 * @method static Func ftp_rmdir($ftp, $directory)
 * @method static Func ftp_chmod($ftp, $mode, $filename)
 * @method static Func ftp_alloc($ftp, $size, $response)
 * @method static Func ftp_nlist($ftp, $directory)
 * @method static Func ftp_rawlist($ftp, $directory, $recursive)
 * @method static Func ftp_systype($ftp)
 * @method static Func ftp_pasv($ftp, $pasv)
 * @method static Func ftp_get($ftp, $local_file, $remote_file, $mode, $resume_pos)
 * @method static Func ftp_fget($ftp, $fp, $remote_file, $mode, $resumepos)
 * @method static Func ftp_put($ftp, $remote_file, $local_file, $mode, $startpos)
 * @method static Func ftp_fput($ftp, $remote_file, $fp, $mode, $startpos)
 * @method static Func ftp_size($ftp, $filename)
 * @method static Func ftp_mdtm($ftp, $filename)
 * @method static Func ftp_rename($ftp, $src, $dest)
 * @method static Func ftp_delete($ftp, $file)
 * @method static Func ftp_site($ftp, $cmd)
 * @method static Func ftp_close($ftp)
 * @method static Func ftp_set_option($ftp, $option, $value)
 * @method static Func ftp_get_option($ftp, $option)
 * @method static Func ftp_nb_fget($ftp, $fp, $remote_file, $mode, $resumepos)
 * @method static Func ftp_nb_get($ftp, $local_file, $remote_file, $mode, $resume_pos)
 * @method static Func ftp_nb_continue($ftp)
 * @method static Func ftp_nb_put($ftp, $remote_file, $local_file, $mode, $startpos)
 * @method static Func ftp_nb_fput($ftp, $remote_file, $fp, $mode, $startpos)
 * @method static Func ftp_quit($ftp)
 * @method static Func textdomain($domain)
 * @method static Func gettext($msgid)
 * @method static Func _($msgid)
 * @method static Func dgettext($domain_name, $msgid)
 * @method static Func dcgettext($domain_name, $msgid, $category)
 * @method static Func bindtextdomain($domain_name, $dir)
 * @method static Func ngettext($msgid1, $msgid2, $count)
 * @method static Func dngettext($domain, $msgid1, $msgid2, $count)
 * @method static Func dcngettext($domain, $msgid1, $msgid2, $count, $category)
 * @method static Func bind_textdomain_codeset($domain, $codeset)
 * @method static Func iconv($in_charset, $out_charset, $str)
 * @method static Func iconv_get_encoding($type)
 * @method static Func iconv_set_encoding($type, $charset)
 * @method static Func iconv_strlen($str, $charset)
 * @method static Func iconv_substr($str, $offset, $length, $charset)
 * @method static Func iconv_strpos($haystack, $needle, $offset, $charset)
 * @method static Func iconv_strrpos($haystack, $needle, $charset)
 * @method static Func iconv_mime_encode($field_name, $field_value, $preference)
 * @method static Func iconv_mime_decode($encoded_string, $mode, $charset)
 * @method static Func iconv_mime_decode_headers($headers, $mode, $charset)
 * @method static Func igbinary_serialize($value)
 * @method static Func igbinary_unserialize($str)
 * @method static Func json_encode($value, $options, $depth)
 * @method static Func json_decode($json, $assoc, $depth, $options)
 * @method static Func json_last_error()
 * @method static Func json_last_error_msg()
 * @method static Func mb_convert_case($sourcestring, $mode, $encoding)
 * @method static Func mb_strtoupper($sourcestring, $encoding)
 * @method static Func mb_strtolower($sourcestring, $encoding)
 * @method static Func mb_language($language)
 * @method static Func mb_internal_encoding($encoding)
 * @method static Func mb_http_input($type)
 * @method static Func mb_http_output($encoding)
 * @method static Func mb_detect_order($encoding)
 * @method static Func mb_substitute_character($substchar)
 * @method static Func mb_parse_str($encoded_string, $result)
 * @method static Func mb_output_handler($contents, $status)
 * @method static Func mb_preferred_mime_name($encoding)
 * @method static Func mb_strlen($str, $encoding)
 * @method static Func mb_strpos($haystack, $needle, $offset, $encoding)
 * @method static Func mb_strrpos($haystack, $needle, $offset, $encoding)
 * @method static Func mb_stripos($haystack, $needle, $offset, $encoding)
 * @method static Func mb_strripos($haystack, $needle, $offset, $encoding)
 * @method static Func mb_strstr($haystack, $needle, $part, $encoding)
 * @method static Func mb_strrchr($haystack, $needle, $part, $encoding)
 * @method static Func mb_stristr($haystack, $needle, $part, $encoding)
 * @method static Func mb_strrichr($haystack, $needle, $part, $encoding)
 * @method static Func mb_substr_count($haystack, $needle, $encoding)
 * @method static Func mb_substr($str, $start, $length, $encoding)
 * @method static Func mb_strcut($str, $start, $length, $encoding)
 * @method static Func mb_strwidth($str, $encoding)
 * @method static Func mb_strimwidth($str, $start, $width, $trimmarker, $encoding)
 * @method static Func mb_convert_encoding($str, $to, $from)
 * @method static Func mb_detect_encoding($str, $encoding_list, $strict)
 * @method static Func mb_list_encodings()
 * @method static Func mb_encoding_aliases($encoding)
 * @method static Func mb_convert_kana($str, $option, $encoding)
 * @method static Func mb_encode_mimeheader($str, $charset, $transfer, $linefeed, $indent)
 * @method static Func mb_decode_mimeheader($string)
 * @method static Func mb_convert_variables($to, $from, $vars)
 * @method static Func mb_encode_numericentity($string, $convmap, $encoding, $is_hex)
 * @method static Func mb_decode_numericentity($string, $convmap, $encoding)
 * @method static Func mb_send_mail($to, $subject, $message, $additional_headers, $additional_parameters)
 * @method static Func mb_get_info($type)
 * @method static Func mb_check_encoding($var, $encoding)
 * @method static Func mb_regex_encoding($encoding)
 * @method static Func mb_regex_set_options($options)
 * @method static Func mb_ereg($pattern, $string, $registers)
 * @method static Func mb_eregi($pattern, $string, $registers)
 * @method static Func mb_ereg_replace($pattern, $replacement, $string, $option)
 * @method static Func mb_eregi_replace($pattern, $replacement, $string)
 * @method static Func mb_ereg_replace_callback($pattern, $callback, $string, $option)
 * @method static Func mb_split($pattern, $string, $limit)
 * @method static Func mb_ereg_match($pattern, $string, $option)
 * @method static Func mb_ereg_search($pattern, $option)
 * @method static Func mb_ereg_search_pos($pattern, $option)
 * @method static Func mb_ereg_search_regs($pattern, $option)
 * @method static Func mb_ereg_search_init($string, $pattern, $option)
 * @method static Func mb_ereg_search_getregs()
 * @method static Func mb_ereg_search_getpos()
 * @method static Func mb_ereg_search_setpos($position)
 * @method static Func mbregex_encoding($encoding)
 * @method static Func mbereg($pattern, $string, $registers)
 * @method static Func mberegi($pattern, $string, $registers)
 * @method static Func mbereg_replace($pattern, $replacement, $string, $option)
 * @method static Func mberegi_replace($pattern, $replacement, $string)
 * @method static Func mbsplit($pattern, $string, $limit)
 * @method static Func mbereg_match($pattern, $string, $option)
 * @method static Func mbereg_search($pattern, $option)
 * @method static Func mbereg_search_pos($pattern, $option)
 * @method static Func mbereg_search_regs($pattern, $option)
 * @method static Func mbereg_search_init($string, $pattern, $option)
 * @method static Func mbereg_search_getregs()
 * @method static Func mbereg_search_getpos()
 * @method static Func mbereg_search_setpos($position)
 * @method static Func pg_connect($connection_string, $connect_type, $host, $port, $options, $tty, $database)
 * @method static Func pg_pconnect($connection_string, $host, $port, $options, $tty, $database)
 * @method static Func pg_connect_poll($connection)
 * @method static Func pg_close($connection)
 * @method static Func pg_connection_status($connection)
 * @method static Func pg_connection_busy($connection)
 * @method static Func pg_connection_reset($connection)
 * @method static Func pg_host($connection)
 * @method static Func pg_dbname($connection)
 * @method static Func pg_port($connection)
 * @method static Func pg_tty($connection)
 * @method static Func pg_options($connection)
 * @method static Func pg_version($connection)
 * @method static Func pg_ping($connection)
 * @method static Func pg_parameter_status($connection, $param_name)
 * @method static Func pg_transaction_status($connection)
 * @method static Func pg_query($connection, $query)
 * @method static Func pg_query_params($connection, $query, $params)
 * @method static Func pg_prepare($connection, $stmtname, $query)
 * @method static Func pg_execute($connection, $stmtname, $params)
 * @method static Func pg_send_query($connection, $query)
 * @method static Func pg_send_query_params($connection, $query, $params)
 * @method static Func pg_send_prepare($connection, $stmtname, $query)
 * @method static Func pg_send_execute($connection, $stmtname, $params)
 * @method static Func pg_cancel_query($connection)
 * @method static Func pg_fetch_result($result, $row_number, $field_name)
 * @method static Func pg_fetch_row($result, $row, $result_type)
 * @method static Func pg_fetch_assoc($result, $row)
 * @method static Func pg_fetch_array($result, $row, $result_type)
 * @method static Func pg_fetch_object($result, $row, $class_name, $l, $ctor_params)
 * @method static Func pg_fetch_all($result, $result_type)
 * @method static Func pg_fetch_all_columns($result, $column_number)
 * @method static Func pg_affected_rows($result)
 * @method static Func pg_get_result($connection)
 * @method static Func pg_result_seek($result, $offset)
 * @method static Func pg_result_status($result, $result_type)
 * @method static Func pg_free_result($result)
 * @method static Func pg_last_oid($result)
 * @method static Func pg_num_rows($result)
 * @method static Func pg_num_fields($result)
 * @method static Func pg_field_name($result, $field_number)
 * @method static Func pg_field_num($result, $field_name)
 * @method static Func pg_field_size($result, $field_number)
 * @method static Func pg_field_type($result, $field_number)
 * @method static Func pg_field_type_oid($result, $field_number)
 * @method static Func pg_field_prtlen($result, $row, $field_name_or_number)
 * @method static Func pg_field_is_null($result, $row, $field_name_or_number)
 * @method static Func pg_field_table($result, $field_number, $oid_only)
 * @method static Func pg_get_notify($connection, $e)
 * @method static Func pg_socket($connection)
 * @method static Func pg_consume_input($connection)
 * @method static Func pg_flush($connection)
 * @method static Func pg_get_pid($connection)
 * @method static Func pg_result_error($result)
 * @method static Func pg_result_error_field($result, $fieldcode)
 * @method static Func pg_last_error($connection)
 * @method static Func pg_last_notice($connection, $option)
 * @method static Func pg_put_line($connection, $query)
 * @method static Func pg_end_copy($connection)
 * @method static Func pg_copy_to($connection, $table_name, $delimiter, $null_as)
 * @method static Func pg_copy_from($connection, $table_name, $rows, $delimiter, $null_as)
 * @method static Func pg_trace($filename, $mode, $connection)
 * @method static Func pg_untrace($connection)
 * @method static Func pg_lo_create($connection, $large_object_id)
 * @method static Func pg_lo_unlink($connection, $large_object_oid)
 * @method static Func pg_lo_open($connection, $large_object_oid, $mode)
 * @method static Func pg_lo_close($large_object)
 * @method static Func pg_lo_read($large_object, $len)
 * @method static Func pg_lo_write($large_object, $buf, $len)
 * @method static Func pg_lo_read_all($large_object)
 * @method static Func pg_lo_import($connection, $filename, $large_object_oid)
 * @method static Func pg_lo_export($connection, $objoid, $filename)
 * @method static Func pg_lo_seek($large_object, $offset, $whence)
 * @method static Func pg_lo_tell($large_object)
 * @method static Func pg_lo_truncate($large_object, $size)
 * @method static Func pg_escape_string($connection, $data)
 * @method static Func pg_escape_bytea($connection, $data)
 * @method static Func pg_unescape_bytea($data)
 * @method static Func pg_escape_literal($connection, $data)
 * @method static Func pg_escape_identifier($connection, $data)
 * @method static Func pg_set_error_verbosity($connection, $verbosity)
 * @method static Func pg_client_encoding($connection)
 * @method static Func pg_set_client_encoding($connection, $encoding)
 * @method static Func pg_meta_data($db, $table)
 * @method static Func pg_convert($db, $table, $values, $options)
 * @method static Func pg_insert($db, $table, $values, $options)
 * @method static Func pg_update($db, $table, $fields, $ids, $options)
 * @method static Func pg_delete($db, $table, $ids, $options)
 * @method static Func pg_select($db, $table, $ids, $options, $result_type)
 * @method static Func pg_exec($connection, $query)
 * @method static Func pg_getlastoid($result)
 * @method static Func pg_cmdtuples($result)
 * @method static Func pg_errormessage($connection)
 * @method static Func pg_numrows($result)
 * @method static Func pg_numfields($result)
 * @method static Func pg_fieldname($result, $field_number)
 * @method static Func pg_fieldsize($result, $field_number)
 * @method static Func pg_fieldtype($result, $field_number)
 * @method static Func pg_fieldnum($result, $field_name)
 * @method static Func pg_fieldprtlen($result, $row, $field_name_or_number)
 * @method static Func pg_fieldisnull($result, $row, $field_name_or_number)
 * @method static Func pg_freeresult($result)
 * @method static Func pg_result($connection)
 * @method static Func pg_loreadall($large_object)
 * @method static Func pg_locreate($connection, $large_object_id)
 * @method static Func pg_lounlink($connection, $large_object_oid)
 * @method static Func pg_loopen($connection, $large_object_oid, $mode)
 * @method static Func pg_loclose($large_object)
 * @method static Func pg_loread($large_object, $len)
 * @method static Func pg_lowrite($large_object, $buf, $len)
 * @method static Func pg_loimport($connection, $filename, $large_object_oid)
 * @method static Func pg_loexport($connection, $objoid, $filename)
 * @method static Func pg_clientencoding($connection)
 * @method static Func pg_setclientencoding($connection, $encoding)
 * @method static Func posix_kill($pid, $sig)
 * @method static Func posix_getpid()
 * @method static Func posix_getppid()
 * @method static Func posix_getuid()
 * @method static Func posix_setuid($uid)
 * @method static Func posix_geteuid()
 * @method static Func posix_seteuid($uid)
 * @method static Func posix_getgid()
 * @method static Func posix_setgid($gid)
 * @method static Func posix_getegid()
 * @method static Func posix_setegid($gid)
 * @method static Func posix_getgroups()
 * @method static Func posix_getlogin()
 * @method static Func posix_getpgrp()
 * @method static Func posix_setsid()
 * @method static Func posix_setpgid($pid, $pgid)
 * @method static Func posix_getpgid($pid)
 * @method static Func posix_getsid($pid)
 * @method static Func posix_uname()
 * @method static Func posix_times()
 * @method static Func posix_ctermid()
 * @method static Func posix_ttyname($fd)
 * @method static Func posix_isatty($fd)
 * @method static Func posix_getcwd()
 * @method static Func posix_mkfifo($pathname, $mode)
 * @method static Func posix_mknod($pathname, $mode, $major, $minor)
 * @method static Func posix_access($file, $mode)
 * @method static Func posix_getgrnam($name)
 * @method static Func posix_getgrgid($gid)
 * @method static Func posix_getpwnam($username)
 * @method static Func posix_getpwuid($uid)
 * @method static Func posix_getrlimit()
 * @method static Func posix_setrlimit($resource, $softlimit, $hardlimit)
 * @method static Func posix_get_last_error()
 * @method static Func posix_errno()
 * @method static Func posix_strerror($errno)
 * @method static Func posix_initgroups($name, $base_group_id)
 * @method static Func readline($prompt)
 * @method static Func readline_info($varname, $newvalue)
 * @method static Func readline_add_history($prompt)
 * @method static Func readline_clear_history()
 * @method static Func readline_read_history($filename)
 * @method static Func readline_write_history($filename)
 * @method static Func readline_completion_function($funcname)
 * @method static Func readline_callback_handler_install($prompt, $callback)
 * @method static Func readline_callback_read_char()
 * @method static Func readline_callback_handler_remove()
 * @method static Func readline_redisplay()
 * @method static Func readline_on_new_line()
 * @method static Func runkit_zval_inspect($value)
 * @method static Func runkit_object_id($obj)
 * @method static Func runkit_superglobals()
 * @method static Func runkit_function_add($funcname, $arglist_or_closure, $code_or_doc_comment, $return_by_reference, $doc_comment, $return_type)
 * @method static Func runkit_function_remove($funcname)
 * @method static Func runkit_function_rename($funcname, $newname)
 * @method static Func runkit_function_redefine($funcname, $arglist_or_closure, $code_or_doc_comment, $return_by_reference, $doc_comment, $return_type)
 * @method static Func runkit_function_copy($funcname, $targetname)
 * @method static Func runkit_method_add($classname, $methodname, $arglist_or_closure, $code_or_flags, $flags_or_doc_comment, $doc_comment, $return_type)
 * @method static Func runkit_method_redefine($classname, $methodname, $arglist_or_closure, $code_or_flags, $flags_or_doc_comment, $doc_comment, $return_type)
 * @method static Func runkit_method_remove($classname, $methodname)
 * @method static Func runkit_method_rename($classname, $methodname, $newname)
 * @method static Func runkit_method_copy($dClass, $dMethod, $sClass, $sMethod)
 * @method static Func runkit_constant_redefine($constname, $value, $newVisibility)
 * @method static Func runkit_constant_remove($constname)
 * @method static Func runkit_constant_add($constname, $value, $newVisibility)
 * @method static Func shmop_open($key, $flags, $mode, $size)
 * @method static Func shmop_read($shmid, $start, $count)
 * @method static Func shmop_close($shmid)
 * @method static Func shmop_size($shmid)
 * @method static Func shmop_write($shmid, $data, $offset)
 * @method static Func shmop_delete($shmid)
 * @method static Func simplexml_load_file($filename, $class_name, $options, $ns, $is_prefix)
 * @method static Func simplexml_load_string($data, $class_name, $options, $ns, $is_prefix)
 * @method static Func simplexml_import_dom($node, $class_name)
 * @method static Func socket_select($read_fds, $write_fds, $except_fds, $tv_sec, $tv_usec)
 * @method static Func socket_create($domain, $type, $protocol)
 * @method static Func socket_create_listen($port, $backlog)
 * @method static Func socket_create_pair($domain, $type, $protocol, $fd)
 * @method static Func socket_accept($socket)
 * @method static Func socket_set_nonblock($socket)
 * @method static Func socket_set_block($socket)
 * @method static Func socket_listen($socket, $backlog)
 * @method static Func socket_close($socket)
 * @method static Func socket_write($socket, $buf, $length)
 * @method static Func socket_read($socket, $length, $type)
 * @method static Func socket_getsockname($socket, $addr, $port)
 * @method static Func socket_getpeername($socket, $addr, $port)
 * @method static Func socket_connect($socket, $addr, $port)
 * @method static Func socket_strerror($errno)
 * @method static Func socket_bind($socket, $addr, $port)
 * @method static Func socket_recv($socket, $buf, $len, $flags)
 * @method static Func socket_send($socket, $buf, $len, $flags)
 * @method static Func socket_recvfrom($socket, $buf, $len, $flags, $name, $port)
 * @method static Func socket_sendto($socket, $buf, $len, $flags, $addr, $port)
 * @method static Func socket_get_option($socket, $level, $optname)
 * @method static Func socket_set_option($socket, $level, $optname, $optval)
 * @method static Func socket_shutdown($socket, $how)
 * @method static Func socket_last_error($socket)
 * @method static Func socket_clear_error($socket)
 * @method static Func socket_import_stream($stream)
 * @method static Func socket_export_stream($socket)
 * @method static Func socket_sendmsg($socket, $msghdr, $flags)
 * @method static Func socket_recvmsg($socket, $msghdr, $flags)
 * @method static Func socket_cmsg_space($level, $type)
 * @method static Func socket_getopt($socket, $level, $optname)
 * @method static Func socket_setopt($socket, $level, $optname, $optval)
 * @method static Func msg_get_queue($key, $perms)
 * @method static Func msg_send($queue, $msgtype, $message, $serialize, $blocking, $errorcode)
 * @method static Func msg_receive($queue, $desiredmsgtype, $msgtype, $maxsize, $message, $unserialize, $flags, $errorcode)
 * @method static Func msg_remove_queue($queue)
 * @method static Func msg_stat_queue($queue)
 * @method static Func msg_set_queue($queue, $data)
 * @method static Func msg_queue_exists($key)
 * @method static Func sem_get($key, $max_acquire, $perm, $auto_release)
 * @method static Func sem_acquire($sem_identifier, $nowait)
 * @method static Func sem_release($sem_identifier)
 * @method static Func sem_remove($sem_identifier)
 * @method static Func shm_attach($key, $memsize, $perm)
 * @method static Func shm_remove($shm_identifier)
 * @method static Func shm_detach($shm_identifier)
 * @method static Func shm_put_var($shm_identifier, $variable_key, $variable)
 * @method static Func shm_has_var($id, $variable_key)
 * @method static Func shm_get_var($id, $variable_key)
 * @method static Func shm_remove_var($id, $variable_key)
 * @method static Func token_get_all($source, $flags)
 * @method static Func token_name($token)
 * @method static Func uuid_create($uuid_type)
 * @method static Func uuid_is_valid($uuid)
 * @method static Func uuid_compare($uuid1, $uuid2)
 * @method static Func uuid_is_null($uuid)
 * @method static Func uuid_type($uuid)
 * @method static Func uuid_variant($uuid)
 * @method static Func uuid_time($uuid)
 * @method static Func uuid_mac($uuid)
 * @method static Func uuid_parse($uuid)
 * @method static Func uuid_unparse($uuid)
 * @method static Func wddx_serialize_value($var, $comment)
 * @method static Func wddx_serialize_vars($var_names)
 * @method static Func wddx_packet_start($comment)
 * @method static Func wddx_packet_end($packet_id)
 * @method static Func wddx_add_vars($packet_id, $var_names)
 * @method static Func wddx_deserialize($packet)
 * @method static Func xmlwriter_open_uri($uri)
 * @method static Func xmlwriter_open_memory()
 * @method static Func xmlwriter_set_indent($xmlwriter, $indent)
 * @method static Func xmlwriter_set_indent_string($xmlwriter, $indentString)
 * @method static Func xmlwriter_start_comment($xmlwriter)
 * @method static Func xmlwriter_end_comment($xmlwriter)
 * @method static Func xmlwriter_start_attribute($xmlwriter, $name)
 * @method static Func xmlwriter_end_attribute($xmlwriter)
 * @method static Func xmlwriter_write_attribute($xmlwriter, $name, $value)
 * @method static Func xmlwriter_start_attribute_ns($xmlwriter, $prefix, $name, $uri)
 * @method static Func xmlwriter_write_attribute_ns($xmlwriter, $prefix, $name, $uri, $content)
 * @method static Func xmlwriter_start_element($xmlwriter, $name)
 * @method static Func xmlwriter_end_element($xmlwriter)
 * @method static Func xmlwriter_full_end_element($xmlwriter)
 * @method static Func xmlwriter_start_element_ns($xmlwriter, $prefix, $name, $uri)
 * @method static Func xmlwriter_write_element($xmlwriter, $name, $content)
 * @method static Func xmlwriter_write_element_ns($xmlwriter, $prefix, $name, $uri, $content)
 * @method static Func xmlwriter_start_pi($xmlwriter, $target)
 * @method static Func xmlwriter_end_pi($xmlwriter)
 * @method static Func xmlwriter_write_pi($xmlwriter, $target, $content)
 * @method static Func xmlwriter_start_cdata($xmlwriter)
 * @method static Func xmlwriter_end_cdata($xmlwriter)
 * @method static Func xmlwriter_write_cdata($xmlwriter, $content)
 * @method static Func xmlwriter_text($xmlwriter, $content)
 * @method static Func xmlwriter_write_raw($xmlwriter, $content)
 * @method static Func xmlwriter_start_document($xmlwriter, $version, $encoding, $standalone)
 * @method static Func xmlwriter_end_document($xmlwriter)
 * @method static Func xmlwriter_write_comment($xmlwriter, $content)
 * @method static Func xmlwriter_start_dtd($xmlwriter, $qualifiedName, $publicId, $systemId)
 * @method static Func xmlwriter_end_dtd($xmlwriter)
 * @method static Func xmlwriter_write_dtd($xmlwriter, $name, $publicId, $systemId, $subset)
 * @method static Func xmlwriter_start_dtd_element($xmlwriter, $qualifiedName)
 * @method static Func xmlwriter_end_dtd_element($xmlwriter)
 * @method static Func xmlwriter_write_dtd_element($xmlwriter, $name, $content)
 * @method static Func xmlwriter_start_dtd_attlist($xmlwriter, $name)
 * @method static Func xmlwriter_end_dtd_attlist($xmlwriter)
 * @method static Func xmlwriter_write_dtd_attlist($xmlwriter, $name, $content)
 * @method static Func xmlwriter_start_dtd_entity($xmlwriter, $name, $isparam)
 * @method static Func xmlwriter_end_dtd_entity($xmlwriter)
 * @method static Func xmlwriter_write_dtd_entity($xmlwriter, $name, $content)
 * @method static Func xmlwriter_output_memory($xmlwriter, $flush)
 * @method static Func xmlwriter_flush($xmlwriter, $empty)
 * @method static Func opcache_reset()
 * @method static Func opcache_invalidate($script, $force)
 * @method static Func opcache_compile_file($file)
 * @method static Func opcache_is_script_cached($script)
 * @method static Func opcache_get_configuration()
 * @method static Func opcache_get_status($fetch_scripts)
 * @method static Func xdebug_get_stack_depth()
 * @method static Func xdebug_get_function_stack()
 * @method static Func xdebug_get_formatted_function_stack()
 * @method static Func xdebug_print_function_stack($message, $options)
 * @method static Func xdebug_get_declared_vars()
 * @method static Func xdebug_call_class($depth)
 * @method static Func xdebug_call_function($depth)
 * @method static Func xdebug_call_file($depth)
 * @method static Func xdebug_call_line($depth)
 * @method static Func xdebug_var_dump($var)
 * @method static Func xdebug_debug_zval($var)
 * @method static Func xdebug_debug_zval_stdout($var)
 * @method static Func xdebug_enable()
 * @method static Func xdebug_disable()
 * @method static Func xdebug_is_enabled()
 * @method static Func xdebug_break()
 * @method static Func xdebug_start_trace($fname, $options)
 * @method static Func xdebug_stop_trace()
 * @method static Func xdebug_get_tracefile_name()
 * @method static Func xdebug_get_profiler_filename()
 * @method static Func xdebug_dump_aggr_profiling_data($prefix)
 * @method static Func xdebug_clear_aggr_profiling_data()
 * @method static Func xdebug_memory_usage()
 * @method static Func xdebug_peak_memory_usage()
 * @method static Func xdebug_time_index()
 * @method static Func xdebug_start_error_collection()
 * @method static Func xdebug_stop_error_collection()
 * @method static Func xdebug_get_collected_errors($clear)
 * @method static Func xdebug_start_function_monitor($functions_to_monitor)
 * @method static Func xdebug_stop_function_monitor()
 * @method static Func xdebug_get_monitored_functions($clear)
 * @method static Func xdebug_start_code_coverage($options)
 * @method static Func xdebug_stop_code_coverage($cleanup)
 * @method static Func xdebug_get_code_coverage()
 * @method static Func xdebug_code_coverage_started()
 * @method static Func xdebug_get_function_count()
 * @method static Func xdebug_dump_superglobals()
 * @method static Func xdebug_get_headers()
 * @method static Func dl($extension_filename)
 * @method static Func cli_set_process_title($title)
 * @method static Func cli_get_process_title()
 */
class ResultOf
{
    use InternalFunctionTrait;

    /**
     * @param string $name
     * @param array $arguments
     * @return Func
     * @throws \Exception
     */
    public static function __callStatic(string $name, array $arguments): Func
    {
        if ($func = static::handleInternalFunctionCall($name, $arguments)) {
            return $func;
        }

        throw new \Exception('Unknown procedure: ' . $name);
    }

    /**
     * @param AbstractNode $subject
     * @param string $method
     * @param array ...$args
     * @return Node
     */
    public static function methodCall(AbstractNode $subject, string $method, ...$args): Node
    {
        return Node::new(MethodCall::class, [$subject->getStatements(), $method, array_map(function(AbstractNode $node) {
            return $node->getStatements();
        }, $args)]);
    }

    /**
     * @param AbstractNode $subject
     * @param string $method
     * @param array ...$args
     * @return Node
     */
    public static function staticMethodCall(AbstractNode $subject, string $method, ...$args): Node
    {
        return Node::new(StaticCall::class, [$subject->getStatements(), $method, array_map(function(AbstractNode $node) {
            return $node->getStatements();
        }, $args)]);
    }
}
